// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: vod/business/vod_upload.proto

package business

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AbstractVodUrlUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 上传的空间名
}

func (x *AbstractVodUrlUploadRequest) Reset() {
	*x = AbstractVodUrlUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbstractVodUrlUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbstractVodUrlUploadRequest) ProtoMessage() {}

func (x *AbstractVodUrlUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbstractVodUrlUploadRequest.ProtoReflect.Descriptor instead.
func (*AbstractVodUrlUploadRequest) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{0}
}

func (x *AbstractVodUrlUploadRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

type AbstractURLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUrl    string `protobuf:"bytes,1,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`       //视频的URL
	CallbackArgs string `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` //透传的回调信息
	Md5          string `protobuf:"bytes,3,opt,name=Md5,proto3" json:"Md5,omitempty"`                   //视频的MD5
	TemplateId   string `protobuf:"bytes,4,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`     // 模板Id
	Title        string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`               //标题
	Description  string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`   //描述信息
	Tags         string `protobuf:"bytes,7,opt,name=Tags,proto3" json:"Tags,omitempty"`                 //标签
	Category     string `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`         //分类
}

func (x *AbstractURLSet) Reset() {
	*x = AbstractURLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbstractURLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbstractURLSet) ProtoMessage() {}

func (x *AbstractURLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbstractURLSet.ProtoReflect.Descriptor instead.
func (*AbstractURLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{1}
}

func (x *AbstractURLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *AbstractURLSet) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *AbstractURLSet) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AbstractURLSet) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *AbstractURLSet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AbstractURLSet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AbstractURLSet) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *AbstractURLSet) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type ValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string `protobuf:"bytes,1,opt,name=JobId,proto3" json:"JobId,omitempty"`         // Url对应的JobId
	SourceUrl string `protobuf:"bytes,2,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"` //上传的Url
}

func (x *ValuePair) Reset() {
	*x = ValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePair) ProtoMessage() {}

func (x *ValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePair.ProtoReflect.Descriptor instead.
func (*ValuePair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{2}
}

func (x *ValuePair) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ValuePair) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

type QueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *QueryUploadResult `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *QueryData) Reset() {
	*x = QueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryData) ProtoMessage() {}

func (x *QueryData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryData.ProtoReflect.Descriptor instead.
func (*QueryData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{3}
}

func (x *QueryData) GetData() *QueryUploadResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryUploadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoInfoList  []*URLSet `protobuf:"bytes,1,rep,name=VideoInfoList,proto3" json:"VideoInfoList,omitempty"`
	NotExistJobIds []string  `protobuf:"bytes,2,rep,name=NotExistJobIds,proto3" json:"NotExistJobIds,omitempty"`
}

func (x *QueryUploadResult) Reset() {
	*x = QueryUploadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUploadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUploadResult) ProtoMessage() {}

func (x *QueryUploadResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUploadResult.ProtoReflect.Descriptor instead.
func (*QueryUploadResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{4}
}

func (x *QueryUploadResult) GetVideoInfoList() []*URLSet {
	if x != nil {
		return x.VideoInfoList
	}
	return nil
}

func (x *QueryUploadResult) GetNotExistJobIds() []string {
	if x != nil {
		return x.NotExistJobIds
	}
	return nil
}

type CommitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CommitUploadInfoResponse `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CommitData) Reset() {
	*x = CommitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitData) ProtoMessage() {}

func (x *CommitData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitData.ProtoReflect.Descriptor instead.
func (*CommitData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{5}
}

func (x *CommitData) GetData() *CommitUploadInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommitUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string         `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	SourceInfo   *VodSourceInfo `protobuf:"bytes,2,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	PosterUri    string         `protobuf:"bytes,3,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	CallbackArgs string         `protobuf:"bytes,4,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Encryption   *Encryption    `protobuf:"bytes,5,opt,name=Encryption,proto3" json:"Encryption,omitempty"`
}

func (x *CommitUploadInfoResponse) Reset() {
	*x = CommitUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitUploadInfoResponse) ProtoMessage() {}

func (x *CommitUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*CommitUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{6}
}

func (x *CommitUploadInfoResponse) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *CommitUploadInfoResponse) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *CommitUploadInfoResponse) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *CommitUploadInfoResponse) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *CommitUploadInfoResponse) GetEncryption() *Encryption {
	if x != nil {
		return x.Encryption
	}
	return nil
}

type Encryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri       string `protobuf:"bytes,1,opt,name=Uri,proto3" json:"Uri,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	Algorithm string `protobuf:"bytes,3,opt,name=Algorithm,proto3" json:"Algorithm,omitempty"`
	Version   string `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	SourceMD5 string `protobuf:"bytes,5,opt,name=SourceMD5,proto3" json:"SourceMD5,omitempty"`
}

func (x *Encryption) Reset() {
	*x = Encryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Encryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Encryption) ProtoMessage() {}

func (x *Encryption) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Encryption.ProtoReflect.Descriptor instead.
func (*Encryption) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{7}
}

func (x *Encryption) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Encryption) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Encryption) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Encryption) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Encryption) GetSourceMD5() string {
	if x != nil {
		return x.SourceMD5
	}
	return ""
}

type URLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string         `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	JobId      string         `protobuf:"bytes,2,opt,name=JobId,proto3" json:"JobId,omitempty"`
	SourceUrl  string         `protobuf:"bytes,3,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
	State      string         `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Vid        string         `protobuf:"bytes,5,opt,name=Vid,proto3" json:"Vid,omitempty"`
	SpaceName  string         `protobuf:"bytes,6,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	AccountId  string         `protobuf:"bytes,7,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	SourceInfo *VodSourceInfo `protobuf:"bytes,8,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
}

func (x *URLSet) Reset() {
	*x = URLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLSet) ProtoMessage() {}

func (x *URLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLSet.ProtoReflect.Descriptor instead.
func (*URLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{8}
}

func (x *URLSet) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *URLSet) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *URLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *URLSet) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *URLSet) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *URLSet) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *URLSet) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *URLSet) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

var File_vod_business_vod_upload_proto protoreflect.FileDescriptor

var file_vod_business_vod_upload_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x1a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3b, 0x0a, 0x1b, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x6f, 0x64,
	0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xec,
	0x01, 0x0a, 0x0e, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x53, 0x65,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x3f, 0x0a,
	0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x45,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4e,
	0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xef, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72,
	0x69, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x56, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x44, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x44, 0x35, 0x22, 0x80, 0x02, 0x0a, 0x06, 0x55, 0x52,
	0x4c, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0xaf, 0x01, 0x0a,
	0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x42, 0x09, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x54,
	0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x64,
	0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8,
	0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x1a, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0xe2, 0x02, 0x19, 0x56, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_business_vod_upload_proto_rawDescOnce sync.Once
	file_vod_business_vod_upload_proto_rawDescData = file_vod_business_vod_upload_proto_rawDesc
)

func file_vod_business_vod_upload_proto_rawDescGZIP() []byte {
	file_vod_business_vod_upload_proto_rawDescOnce.Do(func() {
		file_vod_business_vod_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_business_vod_upload_proto_rawDescData)
	})
	return file_vod_business_vod_upload_proto_rawDescData
}

var file_vod_business_vod_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_vod_business_vod_upload_proto_goTypes = []interface{}{
	(*AbstractVodUrlUploadRequest)(nil), // 0: Vcloud.Models.Vod.AbstractVodUrlUploadRequest
	(*AbstractURLSet)(nil),              // 1: Vcloud.Models.Vod.AbstractURLSet
	(*ValuePair)(nil),                   // 2: Vcloud.Models.Vod.ValuePair
	(*QueryData)(nil),                   // 3: Vcloud.Models.Vod.QueryData
	(*QueryUploadResult)(nil),           // 4: Vcloud.Models.Vod.QueryUploadResult
	(*CommitData)(nil),                  // 5: Vcloud.Models.Vod.CommitData
	(*CommitUploadInfoResponse)(nil),    // 6: Vcloud.Models.Vod.CommitUploadInfoResponse
	(*Encryption)(nil),                  // 7: Vcloud.Models.Vod.Encryption
	(*URLSet)(nil),                      // 8: Vcloud.Models.Vod.URLSet
	(*VodSourceInfo)(nil),               // 9: Vcloud.Models.Vod.VodSourceInfo
}
var file_vod_business_vod_upload_proto_depIdxs = []int32{
	4, // 0: Vcloud.Models.Vod.QueryData.Data:type_name -> Vcloud.Models.Vod.QueryUploadResult
	8, // 1: Vcloud.Models.Vod.QueryUploadResult.VideoInfoList:type_name -> Vcloud.Models.Vod.URLSet
	6, // 2: Vcloud.Models.Vod.CommitData.Data:type_name -> Vcloud.Models.Vod.CommitUploadInfoResponse
	9, // 3: Vcloud.Models.Vod.CommitUploadInfoResponse.SourceInfo:type_name -> Vcloud.Models.Vod.VodSourceInfo
	7, // 4: Vcloud.Models.Vod.CommitUploadInfoResponse.Encryption:type_name -> Vcloud.Models.Vod.Encryption
	9, // 5: Vcloud.Models.Vod.URLSet.SourceInfo:type_name -> Vcloud.Models.Vod.VodSourceInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_vod_business_vod_upload_proto_init() }
func file_vod_business_vod_upload_proto_init() {
	if File_vod_business_vod_upload_proto != nil {
		return
	}
	file_vod_business_vod_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vod_business_vod_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbstractVodUrlUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbstractURLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUploadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Encryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_business_vod_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_business_vod_upload_proto_goTypes,
		DependencyIndexes: file_vod_business_vod_upload_proto_depIdxs,
		MessageInfos:      file_vod_business_vod_upload_proto_msgTypes,
	}.Build()
	File_vod_business_vod_upload_proto = out.File
	file_vod_business_vod_upload_proto_rawDesc = nil
	file_vod_business_vod_upload_proto_goTypes = nil
	file_vod_business_vod_upload_proto_depIdxs = nil
}
